// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DBmsg.proto

#ifndef PROTOBUF_DBmsg_2eproto__INCLUDED
#define PROTOBUF_DBmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DBmsg_2eproto();
void protobuf_AssignDesc_DBmsg_2eproto();
void protobuf_ShutdownFile_DBmsg_2eproto();

class DBBagGrid;
class DBBagGridList;
class DBBagInfo;
class DBDecorateItem;
class DBDecorateItemList;
class DBDecorateBagInfo;
class DBDecorateBagInfoList;
class DBDecorateBagModuleInfo;
class DBDecorateBagVIPItem;
class DBDecorateBagVIPList;
class DBDecorateBagVIPInfo;
class DBRoleInfo;

// ===================================================================

class DBBagGrid : public ::google::protobuf::Message {
 public:
  DBBagGrid();
  virtual ~DBBagGrid();

  DBBagGrid(const DBBagGrid& from);

  inline DBBagGrid& operator=(const DBBagGrid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBBagGrid& default_instance();

  void Swap(DBBagGrid* other);

  // implements Message ----------------------------------------------

  DBBagGrid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBBagGrid& from);
  void MergeFrom(const DBBagGrid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DBBagGrid)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBBagGrid* default_instance_;
};
// -------------------------------------------------------------------

class DBBagGridList : public ::google::protobuf::Message {
 public:
  DBBagGridList();
  virtual ~DBBagGridList();

  DBBagGridList(const DBBagGridList& from);

  inline DBBagGridList& operator=(const DBBagGridList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBBagGridList& default_instance();

  void Swap(DBBagGridList* other);

  // implements Message ----------------------------------------------

  DBBagGridList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBBagGridList& from);
  void MergeFrom(const DBBagGridList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DBBagGrid Grids = 1;
  inline int grids_size() const;
  inline void clear_grids();
  static const int kGridsFieldNumber = 1;
  inline const ::DBBagGrid& grids(int index) const;
  inline ::DBBagGrid* mutable_grids(int index);
  inline ::DBBagGrid* add_grids();
  inline const ::google::protobuf::RepeatedPtrField< ::DBBagGrid >&
      grids() const;
  inline ::google::protobuf::RepeatedPtrField< ::DBBagGrid >*
      mutable_grids();

  // @@protoc_insertion_point(class_scope:DBBagGridList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DBBagGrid > grids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBBagGridList* default_instance_;
};
// -------------------------------------------------------------------

class DBBagInfo : public ::google::protobuf::Message {
 public:
  DBBagInfo();
  virtual ~DBBagInfo();

  DBBagInfo(const DBBagInfo& from);

  inline DBBagInfo& operator=(const DBBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBBagInfo& default_instance();

  void Swap(DBBagInfo* other);

  // implements Message ----------------------------------------------

  DBBagInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBBagInfo& from);
  void MergeFrom(const DBBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DBBagGridList GridList = 1;
  inline bool has_gridlist() const;
  inline void clear_gridlist();
  static const int kGridListFieldNumber = 1;
  inline const ::DBBagGridList& gridlist() const;
  inline ::DBBagGridList* mutable_gridlist();
  inline ::DBBagGridList* release_gridlist();
  inline void set_allocated_gridlist(::DBBagGridList* gridlist);

  // @@protoc_insertion_point(class_scope:DBBagInfo)
 private:
  inline void set_has_gridlist();
  inline void clear_has_gridlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DBBagGridList* gridlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBDecorateItem : public ::google::protobuf::Message {
 public:
  DBDecorateItem();
  virtual ~DBDecorateItem();

  DBDecorateItem(const DBDecorateItem& from);

  inline DBDecorateItem& operator=(const DBDecorateItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBDecorateItem& default_instance();

  void Swap(DBDecorateItem* other);

  // implements Message ----------------------------------------------

  DBDecorateItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBDecorateItem& from);
  void MergeFrom(const DBDecorateItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 EndTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DBDecorateItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint64 endtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBDecorateItem* default_instance_;
};
// -------------------------------------------------------------------

class DBDecorateItemList : public ::google::protobuf::Message {
 public:
  DBDecorateItemList();
  virtual ~DBDecorateItemList();

  DBDecorateItemList(const DBDecorateItemList& from);

  inline DBDecorateItemList& operator=(const DBDecorateItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBDecorateItemList& default_instance();

  void Swap(DBDecorateItemList* other);

  // implements Message ----------------------------------------------

  DBDecorateItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBDecorateItemList& from);
  void MergeFrom(const DBDecorateItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DBDecorateItem DecorateGrids = 1;
  inline int decorategrids_size() const;
  inline void clear_decorategrids();
  static const int kDecorateGridsFieldNumber = 1;
  inline const ::DBDecorateItem& decorategrids(int index) const;
  inline ::DBDecorateItem* mutable_decorategrids(int index);
  inline ::DBDecorateItem* add_decorategrids();
  inline const ::google::protobuf::RepeatedPtrField< ::DBDecorateItem >&
      decorategrids() const;
  inline ::google::protobuf::RepeatedPtrField< ::DBDecorateItem >*
      mutable_decorategrids();

  // @@protoc_insertion_point(class_scope:DBDecorateItemList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DBDecorateItem > decorategrids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBDecorateItemList* default_instance_;
};
// -------------------------------------------------------------------

class DBDecorateBagInfo : public ::google::protobuf::Message {
 public:
  DBDecorateBagInfo();
  virtual ~DBDecorateBagInfo();

  DBDecorateBagInfo(const DBDecorateBagInfo& from);

  inline DBDecorateBagInfo& operator=(const DBDecorateBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBDecorateBagInfo& default_instance();

  void Swap(DBDecorateBagInfo* other);

  // implements Message ----------------------------------------------

  DBDecorateBagInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBDecorateBagInfo& from);
  void MergeFrom(const DBDecorateBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DBDecorateItemList BagGridList = 1;
  inline bool has_baggridlist() const;
  inline void clear_baggridlist();
  static const int kBagGridListFieldNumber = 1;
  inline const ::DBDecorateItemList& baggridlist() const;
  inline ::DBDecorateItemList* mutable_baggridlist();
  inline ::DBDecorateItemList* release_baggridlist();
  inline void set_allocated_baggridlist(::DBDecorateItemList* baggridlist);

  // @@protoc_insertion_point(class_scope:DBDecorateBagInfo)
 private:
  inline void set_has_baggridlist();
  inline void clear_has_baggridlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DBDecorateItemList* baggridlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBDecorateBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBDecorateBagInfoList : public ::google::protobuf::Message {
 public:
  DBDecorateBagInfoList();
  virtual ~DBDecorateBagInfoList();

  DBDecorateBagInfoList(const DBDecorateBagInfoList& from);

  inline DBDecorateBagInfoList& operator=(const DBDecorateBagInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBDecorateBagInfoList& default_instance();

  void Swap(DBDecorateBagInfoList* other);

  // implements Message ----------------------------------------------

  DBDecorateBagInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBDecorateBagInfoList& from);
  void MergeFrom(const DBDecorateBagInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DBDecorateBagInfo DecorateBagList = 1;
  inline int decoratebaglist_size() const;
  inline void clear_decoratebaglist();
  static const int kDecorateBagListFieldNumber = 1;
  inline const ::DBDecorateBagInfo& decoratebaglist(int index) const;
  inline ::DBDecorateBagInfo* mutable_decoratebaglist(int index);
  inline ::DBDecorateBagInfo* add_decoratebaglist();
  inline const ::google::protobuf::RepeatedPtrField< ::DBDecorateBagInfo >&
      decoratebaglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::DBDecorateBagInfo >*
      mutable_decoratebaglist();

  // @@protoc_insertion_point(class_scope:DBDecorateBagInfoList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DBDecorateBagInfo > decoratebaglist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBDecorateBagInfoList* default_instance_;
};
// -------------------------------------------------------------------

class DBDecorateBagModuleInfo : public ::google::protobuf::Message {
 public:
  DBDecorateBagModuleInfo();
  virtual ~DBDecorateBagModuleInfo();

  DBDecorateBagModuleInfo(const DBDecorateBagModuleInfo& from);

  inline DBDecorateBagModuleInfo& operator=(const DBDecorateBagModuleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBDecorateBagModuleInfo& default_instance();

  void Swap(DBDecorateBagModuleInfo* other);

  // implements Message ----------------------------------------------

  DBDecorateBagModuleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBDecorateBagModuleInfo& from);
  void MergeFrom(const DBDecorateBagModuleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DBDecorateBagInfoList DecorateBagInfoList = 1;
  inline bool has_decoratebaginfolist() const;
  inline void clear_decoratebaginfolist();
  static const int kDecorateBagInfoListFieldNumber = 1;
  inline const ::DBDecorateBagInfoList& decoratebaginfolist() const;
  inline ::DBDecorateBagInfoList* mutable_decoratebaginfolist();
  inline ::DBDecorateBagInfoList* release_decoratebaginfolist();
  inline void set_allocated_decoratebaginfolist(::DBDecorateBagInfoList* decoratebaginfolist);

  // repeated uint32 TypeList = 2;
  inline int typelist_size() const;
  inline void clear_typelist();
  static const int kTypeListFieldNumber = 2;
  inline ::google::protobuf::uint32 typelist(int index) const;
  inline void set_typelist(int index, ::google::protobuf::uint32 value);
  inline void add_typelist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      typelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_typelist();

  // @@protoc_insertion_point(class_scope:DBDecorateBagModuleInfo)
 private:
  inline void set_has_decoratebaginfolist();
  inline void clear_has_decoratebaginfolist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DBDecorateBagInfoList* decoratebaginfolist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > typelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBDecorateBagModuleInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBDecorateBagVIPItem : public ::google::protobuf::Message {
 public:
  DBDecorateBagVIPItem();
  virtual ~DBDecorateBagVIPItem();

  DBDecorateBagVIPItem(const DBDecorateBagVIPItem& from);

  inline DBDecorateBagVIPItem& operator=(const DBDecorateBagVIPItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBDecorateBagVIPItem& default_instance();

  void Swap(DBDecorateBagVIPItem* other);

  // implements Message ----------------------------------------------

  DBDecorateBagVIPItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBDecorateBagVIPItem& from);
  void MergeFrom(const DBDecorateBagVIPItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);

  // optional uint32 exper = 2;
  inline bool has_exper() const;
  inline void clear_exper();
  static const int kExperFieldNumber = 2;
  inline ::google::protobuf::uint32 exper() const;
  inline void set_exper(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DBDecorateBagVIPItem)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_exper();
  inline void clear_has_exper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 exper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBDecorateBagVIPItem* default_instance_;
};
// -------------------------------------------------------------------

class DBDecorateBagVIPList : public ::google::protobuf::Message {
 public:
  DBDecorateBagVIPList();
  virtual ~DBDecorateBagVIPList();

  DBDecorateBagVIPList(const DBDecorateBagVIPList& from);

  inline DBDecorateBagVIPList& operator=(const DBDecorateBagVIPList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBDecorateBagVIPList& default_instance();

  void Swap(DBDecorateBagVIPList* other);

  // implements Message ----------------------------------------------

  DBDecorateBagVIPList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBDecorateBagVIPList& from);
  void MergeFrom(const DBDecorateBagVIPList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DBDecorateBagVIPItem VIPItemList = 1;
  inline int vipitemlist_size() const;
  inline void clear_vipitemlist();
  static const int kVIPItemListFieldNumber = 1;
  inline const ::DBDecorateBagVIPItem& vipitemlist(int index) const;
  inline ::DBDecorateBagVIPItem* mutable_vipitemlist(int index);
  inline ::DBDecorateBagVIPItem* add_vipitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::DBDecorateBagVIPItem >&
      vipitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::DBDecorateBagVIPItem >*
      mutable_vipitemlist();

  // @@protoc_insertion_point(class_scope:DBDecorateBagVIPList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DBDecorateBagVIPItem > vipitemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBDecorateBagVIPList* default_instance_;
};
// -------------------------------------------------------------------

class DBDecorateBagVIPInfo : public ::google::protobuf::Message {
 public:
  DBDecorateBagVIPInfo();
  virtual ~DBDecorateBagVIPInfo();

  DBDecorateBagVIPInfo(const DBDecorateBagVIPInfo& from);

  inline DBDecorateBagVIPInfo& operator=(const DBDecorateBagVIPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBDecorateBagVIPInfo& default_instance();

  void Swap(DBDecorateBagVIPInfo* other);

  // implements Message ----------------------------------------------

  DBDecorateBagVIPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBDecorateBagVIPInfo& from);
  void MergeFrom(const DBDecorateBagVIPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DBDecorateBagVIPList VIPListInfo = 1;
  inline bool has_viplistinfo() const;
  inline void clear_viplistinfo();
  static const int kVIPListInfoFieldNumber = 1;
  inline const ::DBDecorateBagVIPList& viplistinfo() const;
  inline ::DBDecorateBagVIPList* mutable_viplistinfo();
  inline ::DBDecorateBagVIPList* release_viplistinfo();
  inline void set_allocated_viplistinfo(::DBDecorateBagVIPList* viplistinfo);

  // @@protoc_insertion_point(class_scope:DBDecorateBagVIPInfo)
 private:
  inline void set_has_viplistinfo();
  inline void clear_has_viplistinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DBDecorateBagVIPList* viplistinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBDecorateBagVIPInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBRoleInfo : public ::google::protobuf::Message {
 public:
  DBRoleInfo();
  virtual ~DBRoleInfo();

  DBRoleInfo(const DBRoleInfo& from);

  inline DBRoleInfo& operator=(const DBRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBRoleInfo& default_instance();

  void Swap(DBRoleInfo* other);

  // implements Message ----------------------------------------------

  DBRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBRoleInfo& from);
  void MergeFrom(const DBRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 UID = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUIDFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 Rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 LevelExper = 5;
  inline bool has_levelexper() const;
  inline void clear_levelexper();
  static const int kLevelExperFieldNumber = 5;
  inline ::google::protobuf::uint32 levelexper() const;
  inline void set_levelexper(::google::protobuf::uint32 value);

  // optional uint32 RankExper = 6;
  inline bool has_rankexper() const;
  inline void clear_rankexper();
  static const int kRankExperFieldNumber = 6;
  inline ::google::protobuf::uint32 rankexper() const;
  inline void set_rankexper(::google::protobuf::uint32 value);

  // optional .DBBagInfo BagInfo = 7;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 7;
  inline const ::DBBagInfo& baginfo() const;
  inline ::DBBagInfo* mutable_baginfo();
  inline ::DBBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::DBBagInfo* baginfo);

  // optional .DBDecorateBagModuleInfo DecorateBagModuleInfo = 8;
  inline bool has_decoratebagmoduleinfo() const;
  inline void clear_decoratebagmoduleinfo();
  static const int kDecorateBagModuleInfoFieldNumber = 8;
  inline const ::DBDecorateBagModuleInfo& decoratebagmoduleinfo() const;
  inline ::DBDecorateBagModuleInfo* mutable_decoratebagmoduleinfo();
  inline ::DBDecorateBagModuleInfo* release_decoratebagmoduleinfo();
  inline void set_allocated_decoratebagmoduleinfo(::DBDecorateBagModuleInfo* decoratebagmoduleinfo);

  // optional .DBDecorateBagVIPInfo VIPInfo = 9;
  inline bool has_vipinfo() const;
  inline void clear_vipinfo();
  static const int kVIPInfoFieldNumber = 9;
  inline const ::DBDecorateBagVIPInfo& vipinfo() const;
  inline ::DBDecorateBagVIPInfo* mutable_vipinfo();
  inline ::DBDecorateBagVIPInfo* release_vipinfo();
  inline void set_allocated_vipinfo(::DBDecorateBagVIPInfo* vipinfo);

  // @@protoc_insertion_point(class_scope:DBRoleInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_levelexper();
  inline void clear_has_levelexper();
  inline void set_has_rankexper();
  inline void clear_has_rankexper();
  inline void set_has_baginfo();
  inline void clear_has_baginfo();
  inline void set_has_decoratebagmoduleinfo();
  inline void clear_has_decoratebagmoduleinfo();
  inline void set_has_vipinfo();
  inline void clear_has_vipinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 levelexper_;
  ::google::protobuf::uint32 rankexper_;
  ::DBBagInfo* baginfo_;
  ::DBDecorateBagModuleInfo* decoratebagmoduleinfo_;
  ::DBDecorateBagVIPInfo* vipinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_DBmsg_2eproto();
  friend void protobuf_AssignDesc_DBmsg_2eproto();
  friend void protobuf_ShutdownFile_DBmsg_2eproto();

  void InitAsDefaultInstance();
  static DBRoleInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// DBBagGrid

// optional uint32 ID = 1;
inline bool DBBagGrid::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBBagGrid::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBBagGrid::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBBagGrid::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DBBagGrid::id() const {
  return id_;
}
inline void DBBagGrid::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 Num = 2;
inline bool DBBagGrid::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBBagGrid::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBBagGrid::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBBagGrid::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 DBBagGrid::num() const {
  return num_;
}
inline void DBBagGrid::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// DBBagGridList

// repeated .DBBagGrid Grids = 1;
inline int DBBagGridList::grids_size() const {
  return grids_.size();
}
inline void DBBagGridList::clear_grids() {
  grids_.Clear();
}
inline const ::DBBagGrid& DBBagGridList::grids(int index) const {
  return grids_.Get(index);
}
inline ::DBBagGrid* DBBagGridList::mutable_grids(int index) {
  return grids_.Mutable(index);
}
inline ::DBBagGrid* DBBagGridList::add_grids() {
  return grids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DBBagGrid >&
DBBagGridList::grids() const {
  return grids_;
}
inline ::google::protobuf::RepeatedPtrField< ::DBBagGrid >*
DBBagGridList::mutable_grids() {
  return &grids_;
}

// -------------------------------------------------------------------

// DBBagInfo

// optional .DBBagGridList GridList = 1;
inline bool DBBagInfo::has_gridlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBBagInfo::set_has_gridlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBBagInfo::clear_has_gridlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBBagInfo::clear_gridlist() {
  if (gridlist_ != NULL) gridlist_->::DBBagGridList::Clear();
  clear_has_gridlist();
}
inline const ::DBBagGridList& DBBagInfo::gridlist() const {
  return gridlist_ != NULL ? *gridlist_ : *default_instance_->gridlist_;
}
inline ::DBBagGridList* DBBagInfo::mutable_gridlist() {
  set_has_gridlist();
  if (gridlist_ == NULL) gridlist_ = new ::DBBagGridList;
  return gridlist_;
}
inline ::DBBagGridList* DBBagInfo::release_gridlist() {
  clear_has_gridlist();
  ::DBBagGridList* temp = gridlist_;
  gridlist_ = NULL;
  return temp;
}
inline void DBBagInfo::set_allocated_gridlist(::DBBagGridList* gridlist) {
  delete gridlist_;
  gridlist_ = gridlist;
  if (gridlist) {
    set_has_gridlist();
  } else {
    clear_has_gridlist();
  }
}

// -------------------------------------------------------------------

// DBDecorateItem

// optional uint32 id = 1;
inline bool DBDecorateItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBDecorateItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBDecorateItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBDecorateItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DBDecorateItem::id() const {
  return id_;
}
inline void DBDecorateItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 type = 2;
inline bool DBDecorateItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBDecorateItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBDecorateItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBDecorateItem::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DBDecorateItem::type() const {
  return type_;
}
inline void DBDecorateItem::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 EndTime = 3;
inline bool DBDecorateItem::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBDecorateItem::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBDecorateItem::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBDecorateItem::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 DBDecorateItem::endtime() const {
  return endtime_;
}
inline void DBDecorateItem::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// DBDecorateItemList

// repeated .DBDecorateItem DecorateGrids = 1;
inline int DBDecorateItemList::decorategrids_size() const {
  return decorategrids_.size();
}
inline void DBDecorateItemList::clear_decorategrids() {
  decorategrids_.Clear();
}
inline const ::DBDecorateItem& DBDecorateItemList::decorategrids(int index) const {
  return decorategrids_.Get(index);
}
inline ::DBDecorateItem* DBDecorateItemList::mutable_decorategrids(int index) {
  return decorategrids_.Mutable(index);
}
inline ::DBDecorateItem* DBDecorateItemList::add_decorategrids() {
  return decorategrids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DBDecorateItem >&
DBDecorateItemList::decorategrids() const {
  return decorategrids_;
}
inline ::google::protobuf::RepeatedPtrField< ::DBDecorateItem >*
DBDecorateItemList::mutable_decorategrids() {
  return &decorategrids_;
}

// -------------------------------------------------------------------

// DBDecorateBagInfo

// optional .DBDecorateItemList BagGridList = 1;
inline bool DBDecorateBagInfo::has_baggridlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBDecorateBagInfo::set_has_baggridlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBDecorateBagInfo::clear_has_baggridlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBDecorateBagInfo::clear_baggridlist() {
  if (baggridlist_ != NULL) baggridlist_->::DBDecorateItemList::Clear();
  clear_has_baggridlist();
}
inline const ::DBDecorateItemList& DBDecorateBagInfo::baggridlist() const {
  return baggridlist_ != NULL ? *baggridlist_ : *default_instance_->baggridlist_;
}
inline ::DBDecorateItemList* DBDecorateBagInfo::mutable_baggridlist() {
  set_has_baggridlist();
  if (baggridlist_ == NULL) baggridlist_ = new ::DBDecorateItemList;
  return baggridlist_;
}
inline ::DBDecorateItemList* DBDecorateBagInfo::release_baggridlist() {
  clear_has_baggridlist();
  ::DBDecorateItemList* temp = baggridlist_;
  baggridlist_ = NULL;
  return temp;
}
inline void DBDecorateBagInfo::set_allocated_baggridlist(::DBDecorateItemList* baggridlist) {
  delete baggridlist_;
  baggridlist_ = baggridlist;
  if (baggridlist) {
    set_has_baggridlist();
  } else {
    clear_has_baggridlist();
  }
}

// -------------------------------------------------------------------

// DBDecorateBagInfoList

// repeated .DBDecorateBagInfo DecorateBagList = 1;
inline int DBDecorateBagInfoList::decoratebaglist_size() const {
  return decoratebaglist_.size();
}
inline void DBDecorateBagInfoList::clear_decoratebaglist() {
  decoratebaglist_.Clear();
}
inline const ::DBDecorateBagInfo& DBDecorateBagInfoList::decoratebaglist(int index) const {
  return decoratebaglist_.Get(index);
}
inline ::DBDecorateBagInfo* DBDecorateBagInfoList::mutable_decoratebaglist(int index) {
  return decoratebaglist_.Mutable(index);
}
inline ::DBDecorateBagInfo* DBDecorateBagInfoList::add_decoratebaglist() {
  return decoratebaglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DBDecorateBagInfo >&
DBDecorateBagInfoList::decoratebaglist() const {
  return decoratebaglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::DBDecorateBagInfo >*
DBDecorateBagInfoList::mutable_decoratebaglist() {
  return &decoratebaglist_;
}

// -------------------------------------------------------------------

// DBDecorateBagModuleInfo

// optional .DBDecorateBagInfoList DecorateBagInfoList = 1;
inline bool DBDecorateBagModuleInfo::has_decoratebaginfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBDecorateBagModuleInfo::set_has_decoratebaginfolist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBDecorateBagModuleInfo::clear_has_decoratebaginfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBDecorateBagModuleInfo::clear_decoratebaginfolist() {
  if (decoratebaginfolist_ != NULL) decoratebaginfolist_->::DBDecorateBagInfoList::Clear();
  clear_has_decoratebaginfolist();
}
inline const ::DBDecorateBagInfoList& DBDecorateBagModuleInfo::decoratebaginfolist() const {
  return decoratebaginfolist_ != NULL ? *decoratebaginfolist_ : *default_instance_->decoratebaginfolist_;
}
inline ::DBDecorateBagInfoList* DBDecorateBagModuleInfo::mutable_decoratebaginfolist() {
  set_has_decoratebaginfolist();
  if (decoratebaginfolist_ == NULL) decoratebaginfolist_ = new ::DBDecorateBagInfoList;
  return decoratebaginfolist_;
}
inline ::DBDecorateBagInfoList* DBDecorateBagModuleInfo::release_decoratebaginfolist() {
  clear_has_decoratebaginfolist();
  ::DBDecorateBagInfoList* temp = decoratebaginfolist_;
  decoratebaginfolist_ = NULL;
  return temp;
}
inline void DBDecorateBagModuleInfo::set_allocated_decoratebaginfolist(::DBDecorateBagInfoList* decoratebaginfolist) {
  delete decoratebaginfolist_;
  decoratebaginfolist_ = decoratebaginfolist;
  if (decoratebaginfolist) {
    set_has_decoratebaginfolist();
  } else {
    clear_has_decoratebaginfolist();
  }
}

// repeated uint32 TypeList = 2;
inline int DBDecorateBagModuleInfo::typelist_size() const {
  return typelist_.size();
}
inline void DBDecorateBagModuleInfo::clear_typelist() {
  typelist_.Clear();
}
inline ::google::protobuf::uint32 DBDecorateBagModuleInfo::typelist(int index) const {
  return typelist_.Get(index);
}
inline void DBDecorateBagModuleInfo::set_typelist(int index, ::google::protobuf::uint32 value) {
  typelist_.Set(index, value);
}
inline void DBDecorateBagModuleInfo::add_typelist(::google::protobuf::uint32 value) {
  typelist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBDecorateBagModuleInfo::typelist() const {
  return typelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBDecorateBagModuleInfo::mutable_typelist() {
  return &typelist_;
}

// -------------------------------------------------------------------

// DBDecorateBagVIPItem

// optional uint32 grade = 1;
inline bool DBDecorateBagVIPItem::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBDecorateBagVIPItem::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBDecorateBagVIPItem::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBDecorateBagVIPItem::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 DBDecorateBagVIPItem::grade() const {
  return grade_;
}
inline void DBDecorateBagVIPItem::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// optional uint32 exper = 2;
inline bool DBDecorateBagVIPItem::has_exper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBDecorateBagVIPItem::set_has_exper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBDecorateBagVIPItem::clear_has_exper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBDecorateBagVIPItem::clear_exper() {
  exper_ = 0u;
  clear_has_exper();
}
inline ::google::protobuf::uint32 DBDecorateBagVIPItem::exper() const {
  return exper_;
}
inline void DBDecorateBagVIPItem::set_exper(::google::protobuf::uint32 value) {
  set_has_exper();
  exper_ = value;
}

// -------------------------------------------------------------------

// DBDecorateBagVIPList

// repeated .DBDecorateBagVIPItem VIPItemList = 1;
inline int DBDecorateBagVIPList::vipitemlist_size() const {
  return vipitemlist_.size();
}
inline void DBDecorateBagVIPList::clear_vipitemlist() {
  vipitemlist_.Clear();
}
inline const ::DBDecorateBagVIPItem& DBDecorateBagVIPList::vipitemlist(int index) const {
  return vipitemlist_.Get(index);
}
inline ::DBDecorateBagVIPItem* DBDecorateBagVIPList::mutable_vipitemlist(int index) {
  return vipitemlist_.Mutable(index);
}
inline ::DBDecorateBagVIPItem* DBDecorateBagVIPList::add_vipitemlist() {
  return vipitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DBDecorateBagVIPItem >&
DBDecorateBagVIPList::vipitemlist() const {
  return vipitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::DBDecorateBagVIPItem >*
DBDecorateBagVIPList::mutable_vipitemlist() {
  return &vipitemlist_;
}

// -------------------------------------------------------------------

// DBDecorateBagVIPInfo

// optional .DBDecorateBagVIPList VIPListInfo = 1;
inline bool DBDecorateBagVIPInfo::has_viplistinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBDecorateBagVIPInfo::set_has_viplistinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBDecorateBagVIPInfo::clear_has_viplistinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBDecorateBagVIPInfo::clear_viplistinfo() {
  if (viplistinfo_ != NULL) viplistinfo_->::DBDecorateBagVIPList::Clear();
  clear_has_viplistinfo();
}
inline const ::DBDecorateBagVIPList& DBDecorateBagVIPInfo::viplistinfo() const {
  return viplistinfo_ != NULL ? *viplistinfo_ : *default_instance_->viplistinfo_;
}
inline ::DBDecorateBagVIPList* DBDecorateBagVIPInfo::mutable_viplistinfo() {
  set_has_viplistinfo();
  if (viplistinfo_ == NULL) viplistinfo_ = new ::DBDecorateBagVIPList;
  return viplistinfo_;
}
inline ::DBDecorateBagVIPList* DBDecorateBagVIPInfo::release_viplistinfo() {
  clear_has_viplistinfo();
  ::DBDecorateBagVIPList* temp = viplistinfo_;
  viplistinfo_ = NULL;
  return temp;
}
inline void DBDecorateBagVIPInfo::set_allocated_viplistinfo(::DBDecorateBagVIPList* viplistinfo) {
  delete viplistinfo_;
  viplistinfo_ = viplistinfo;
  if (viplistinfo) {
    set_has_viplistinfo();
  } else {
    clear_has_viplistinfo();
  }
}

// -------------------------------------------------------------------

// DBRoleInfo

// optional uint64 UID = 1;
inline bool DBRoleInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBRoleInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBRoleInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBRoleInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 DBRoleInfo::uid() const {
  return uid_;
}
inline void DBRoleInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional string Name = 2;
inline bool DBRoleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBRoleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBRoleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBRoleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DBRoleInfo::name() const {
  return *name_;
}
inline void DBRoleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DBRoleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DBRoleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DBRoleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DBRoleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DBRoleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 Level = 3;
inline bool DBRoleInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBRoleInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBRoleInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBRoleInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DBRoleInfo::level() const {
  return level_;
}
inline void DBRoleInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 Rank = 4;
inline bool DBRoleInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBRoleInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBRoleInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBRoleInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 DBRoleInfo::rank() const {
  return rank_;
}
inline void DBRoleInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// optional uint32 LevelExper = 5;
inline bool DBRoleInfo::has_levelexper() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBRoleInfo::set_has_levelexper() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBRoleInfo::clear_has_levelexper() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBRoleInfo::clear_levelexper() {
  levelexper_ = 0u;
  clear_has_levelexper();
}
inline ::google::protobuf::uint32 DBRoleInfo::levelexper() const {
  return levelexper_;
}
inline void DBRoleInfo::set_levelexper(::google::protobuf::uint32 value) {
  set_has_levelexper();
  levelexper_ = value;
}

// optional uint32 RankExper = 6;
inline bool DBRoleInfo::has_rankexper() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBRoleInfo::set_has_rankexper() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBRoleInfo::clear_has_rankexper() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBRoleInfo::clear_rankexper() {
  rankexper_ = 0u;
  clear_has_rankexper();
}
inline ::google::protobuf::uint32 DBRoleInfo::rankexper() const {
  return rankexper_;
}
inline void DBRoleInfo::set_rankexper(::google::protobuf::uint32 value) {
  set_has_rankexper();
  rankexper_ = value;
}

// optional .DBBagInfo BagInfo = 7;
inline bool DBRoleInfo::has_baginfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBRoleInfo::set_has_baginfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBRoleInfo::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBRoleInfo::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::DBBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::DBBagInfo& DBRoleInfo::baginfo() const {
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
}
inline ::DBBagInfo* DBRoleInfo::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::DBBagInfo;
  return baginfo_;
}
inline ::DBBagInfo* DBRoleInfo::release_baginfo() {
  clear_has_baginfo();
  ::DBBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void DBRoleInfo::set_allocated_baginfo(::DBBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// optional .DBDecorateBagModuleInfo DecorateBagModuleInfo = 8;
inline bool DBRoleInfo::has_decoratebagmoduleinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBRoleInfo::set_has_decoratebagmoduleinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBRoleInfo::clear_has_decoratebagmoduleinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBRoleInfo::clear_decoratebagmoduleinfo() {
  if (decoratebagmoduleinfo_ != NULL) decoratebagmoduleinfo_->::DBDecorateBagModuleInfo::Clear();
  clear_has_decoratebagmoduleinfo();
}
inline const ::DBDecorateBagModuleInfo& DBRoleInfo::decoratebagmoduleinfo() const {
  return decoratebagmoduleinfo_ != NULL ? *decoratebagmoduleinfo_ : *default_instance_->decoratebagmoduleinfo_;
}
inline ::DBDecorateBagModuleInfo* DBRoleInfo::mutable_decoratebagmoduleinfo() {
  set_has_decoratebagmoduleinfo();
  if (decoratebagmoduleinfo_ == NULL) decoratebagmoduleinfo_ = new ::DBDecorateBagModuleInfo;
  return decoratebagmoduleinfo_;
}
inline ::DBDecorateBagModuleInfo* DBRoleInfo::release_decoratebagmoduleinfo() {
  clear_has_decoratebagmoduleinfo();
  ::DBDecorateBagModuleInfo* temp = decoratebagmoduleinfo_;
  decoratebagmoduleinfo_ = NULL;
  return temp;
}
inline void DBRoleInfo::set_allocated_decoratebagmoduleinfo(::DBDecorateBagModuleInfo* decoratebagmoduleinfo) {
  delete decoratebagmoduleinfo_;
  decoratebagmoduleinfo_ = decoratebagmoduleinfo;
  if (decoratebagmoduleinfo) {
    set_has_decoratebagmoduleinfo();
  } else {
    clear_has_decoratebagmoduleinfo();
  }
}

// optional .DBDecorateBagVIPInfo VIPInfo = 9;
inline bool DBRoleInfo::has_vipinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBRoleInfo::set_has_vipinfo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBRoleInfo::clear_has_vipinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBRoleInfo::clear_vipinfo() {
  if (vipinfo_ != NULL) vipinfo_->::DBDecorateBagVIPInfo::Clear();
  clear_has_vipinfo();
}
inline const ::DBDecorateBagVIPInfo& DBRoleInfo::vipinfo() const {
  return vipinfo_ != NULL ? *vipinfo_ : *default_instance_->vipinfo_;
}
inline ::DBDecorateBagVIPInfo* DBRoleInfo::mutable_vipinfo() {
  set_has_vipinfo();
  if (vipinfo_ == NULL) vipinfo_ = new ::DBDecorateBagVIPInfo;
  return vipinfo_;
}
inline ::DBDecorateBagVIPInfo* DBRoleInfo::release_vipinfo() {
  clear_has_vipinfo();
  ::DBDecorateBagVIPInfo* temp = vipinfo_;
  vipinfo_ = NULL;
  return temp;
}
inline void DBRoleInfo::set_allocated_vipinfo(::DBDecorateBagVIPInfo* vipinfo) {
  delete vipinfo_;
  vipinfo_ = vipinfo;
  if (vipinfo) {
    set_has_vipinfo();
  } else {
    clear_has_vipinfo();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DBmsg_2eproto__INCLUDED
