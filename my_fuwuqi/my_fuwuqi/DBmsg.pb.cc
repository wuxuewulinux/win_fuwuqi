// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DBmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DBmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* DBBagGrid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBBagGrid_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBBagGridList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBBagGridList_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBBagInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBBagInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBDecorateItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBDecorateItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBDecorateItemList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBDecorateItemList_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBDecorateBagInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBDecorateBagInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBDecorateBagInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBDecorateBagInfoList_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBDecorateBagModuleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBDecorateBagModuleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBDecorateBagVIPItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBDecorateBagVIPItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBDecorateBagVIPList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBDecorateBagVIPList_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBDecorateBagVIPInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBDecorateBagVIPInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBRoleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBRoleInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DBmsg_2eproto() {
  protobuf_AddDesc_DBmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DBmsg.proto");
  GOOGLE_CHECK(file != NULL);
  DBBagGrid_descriptor_ = file->message_type(0);
  static const int DBBagGrid_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagGrid, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagGrid, num_),
  };
  DBBagGrid_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBBagGrid_descriptor_,
      DBBagGrid::default_instance_,
      DBBagGrid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagGrid, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagGrid, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBBagGrid));
  DBBagGridList_descriptor_ = file->message_type(1);
  static const int DBBagGridList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagGridList, grids_),
  };
  DBBagGridList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBBagGridList_descriptor_,
      DBBagGridList::default_instance_,
      DBBagGridList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagGridList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagGridList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBBagGridList));
  DBBagInfo_descriptor_ = file->message_type(2);
  static const int DBBagInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagInfo, gridlist_),
  };
  DBBagInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBBagInfo_descriptor_,
      DBBagInfo::default_instance_,
      DBBagInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBBagInfo));
  DBDecorateItem_descriptor_ = file->message_type(3);
  static const int DBDecorateItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateItem, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateItem, endtime_),
  };
  DBDecorateItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBDecorateItem_descriptor_,
      DBDecorateItem::default_instance_,
      DBDecorateItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBDecorateItem));
  DBDecorateItemList_descriptor_ = file->message_type(4);
  static const int DBDecorateItemList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateItemList, decorategrids_),
  };
  DBDecorateItemList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBDecorateItemList_descriptor_,
      DBDecorateItemList::default_instance_,
      DBDecorateItemList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateItemList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateItemList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBDecorateItemList));
  DBDecorateBagInfo_descriptor_ = file->message_type(5);
  static const int DBDecorateBagInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagInfo, baggridlist_),
  };
  DBDecorateBagInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBDecorateBagInfo_descriptor_,
      DBDecorateBagInfo::default_instance_,
      DBDecorateBagInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBDecorateBagInfo));
  DBDecorateBagInfoList_descriptor_ = file->message_type(6);
  static const int DBDecorateBagInfoList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagInfoList, decoratebaglist_),
  };
  DBDecorateBagInfoList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBDecorateBagInfoList_descriptor_,
      DBDecorateBagInfoList::default_instance_,
      DBDecorateBagInfoList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagInfoList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagInfoList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBDecorateBagInfoList));
  DBDecorateBagModuleInfo_descriptor_ = file->message_type(7);
  static const int DBDecorateBagModuleInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagModuleInfo, decoratebaginfolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagModuleInfo, typelist_),
  };
  DBDecorateBagModuleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBDecorateBagModuleInfo_descriptor_,
      DBDecorateBagModuleInfo::default_instance_,
      DBDecorateBagModuleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagModuleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagModuleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBDecorateBagModuleInfo));
  DBDecorateBagVIPItem_descriptor_ = file->message_type(8);
  static const int DBDecorateBagVIPItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPItem, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPItem, exper_),
  };
  DBDecorateBagVIPItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBDecorateBagVIPItem_descriptor_,
      DBDecorateBagVIPItem::default_instance_,
      DBDecorateBagVIPItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBDecorateBagVIPItem));
  DBDecorateBagVIPList_descriptor_ = file->message_type(9);
  static const int DBDecorateBagVIPList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPList, vipitemlist_),
  };
  DBDecorateBagVIPList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBDecorateBagVIPList_descriptor_,
      DBDecorateBagVIPList::default_instance_,
      DBDecorateBagVIPList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBDecorateBagVIPList));
  DBDecorateBagVIPInfo_descriptor_ = file->message_type(10);
  static const int DBDecorateBagVIPInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPInfo, viplistinfo_),
  };
  DBDecorateBagVIPInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBDecorateBagVIPInfo_descriptor_,
      DBDecorateBagVIPInfo::default_instance_,
      DBDecorateBagVIPInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBDecorateBagVIPInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBDecorateBagVIPInfo));
  DBRoleInfo_descriptor_ = file->message_type(11);
  static const int DBRoleInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, levelexper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, rankexper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, baginfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, decoratebagmoduleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, vipinfo_),
  };
  DBRoleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DBRoleInfo_descriptor_,
      DBRoleInfo::default_instance_,
      DBRoleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DBRoleInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DBmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBBagGrid_descriptor_, &DBBagGrid::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBBagGridList_descriptor_, &DBBagGridList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBBagInfo_descriptor_, &DBBagInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBDecorateItem_descriptor_, &DBDecorateItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBDecorateItemList_descriptor_, &DBDecorateItemList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBDecorateBagInfo_descriptor_, &DBDecorateBagInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBDecorateBagInfoList_descriptor_, &DBDecorateBagInfoList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBDecorateBagModuleInfo_descriptor_, &DBDecorateBagModuleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBDecorateBagVIPItem_descriptor_, &DBDecorateBagVIPItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBDecorateBagVIPList_descriptor_, &DBDecorateBagVIPList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBDecorateBagVIPInfo_descriptor_, &DBDecorateBagVIPInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DBRoleInfo_descriptor_, &DBRoleInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DBmsg_2eproto() {
  delete DBBagGrid::default_instance_;
  delete DBBagGrid_reflection_;
  delete DBBagGridList::default_instance_;
  delete DBBagGridList_reflection_;
  delete DBBagInfo::default_instance_;
  delete DBBagInfo_reflection_;
  delete DBDecorateItem::default_instance_;
  delete DBDecorateItem_reflection_;
  delete DBDecorateItemList::default_instance_;
  delete DBDecorateItemList_reflection_;
  delete DBDecorateBagInfo::default_instance_;
  delete DBDecorateBagInfo_reflection_;
  delete DBDecorateBagInfoList::default_instance_;
  delete DBDecorateBagInfoList_reflection_;
  delete DBDecorateBagModuleInfo::default_instance_;
  delete DBDecorateBagModuleInfo_reflection_;
  delete DBDecorateBagVIPItem::default_instance_;
  delete DBDecorateBagVIPItem_reflection_;
  delete DBDecorateBagVIPList::default_instance_;
  delete DBDecorateBagVIPList_reflection_;
  delete DBDecorateBagVIPInfo::default_instance_;
  delete DBDecorateBagVIPInfo_reflection_;
  delete DBRoleInfo::default_instance_;
  delete DBRoleInfo_reflection_;
}

void protobuf_AddDesc_DBmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013DBmsg.proto\"$\n\tDBBagGrid\022\n\n\002ID\030\001 \001(\r\022\013"
    "\n\003Num\030\002 \001(\r\"*\n\rDBBagGridList\022\031\n\005Grids\030\001 "
    "\003(\0132\n.DBBagGrid\"-\n\tDBBagInfo\022 \n\010GridList"
    "\030\001 \001(\0132\016.DBBagGridList\";\n\016DBDecorateItem"
    "\022\n\n\002id\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\017\n\007EndTime\030\003 "
    "\001(\004\"<\n\022DBDecorateItemList\022&\n\rDecorateGri"
    "ds\030\001 \003(\0132\017.DBDecorateItem\"=\n\021DBDecorateB"
    "agInfo\022(\n\013BagGridList\030\001 \001(\0132\023.DBDecorate"
    "ItemList\"D\n\025DBDecorateBagInfoList\022+\n\017Dec"
    "orateBagList\030\001 \003(\0132\022.DBDecorateBagInfo\"`"
    "\n\027DBDecorateBagModuleInfo\0223\n\023DecorateBag"
    "InfoList\030\001 \001(\0132\026.DBDecorateBagInfoList\022\020"
    "\n\010TypeList\030\002 \003(\r\"4\n\024DBDecorateBagVIPItem"
    "\022\r\n\005grade\030\001 \001(\r\022\r\n\005exper\030\002 \001(\r\"B\n\024DBDeco"
    "rateBagVIPList\022*\n\013VIPItemList\030\001 \003(\0132\025.DB"
    "DecorateBagVIPItem\"B\n\024DBDecorateBagVIPIn"
    "fo\022*\n\013VIPListInfo\030\001 \001(\0132\025.DBDecorateBagV"
    "IPList\"\351\001\n\nDBRoleInfo\022\013\n\003UID\030\001 \001(\004\022\014\n\004Na"
    "me\030\002 \001(\t\022\r\n\005Level\030\003 \001(\r\022\014\n\004Rank\030\004 \001(\r\022\022\n"
    "\nLevelExper\030\005 \001(\r\022\021\n\tRankExper\030\006 \001(\r\022\033\n\007"
    "BagInfo\030\007 \001(\0132\n.DBBagInfo\0227\n\025DecorateBag"
    "ModuleInfo\030\010 \001(\0132\030.DBDecorateBagModuleIn"
    "fo\022&\n\007VIPInfo\030\t \001(\0132\025.DBDecorateBagVIPIn"
    "fo", 922);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DBmsg.proto", &protobuf_RegisterTypes);
  DBBagGrid::default_instance_ = new DBBagGrid();
  DBBagGridList::default_instance_ = new DBBagGridList();
  DBBagInfo::default_instance_ = new DBBagInfo();
  DBDecorateItem::default_instance_ = new DBDecorateItem();
  DBDecorateItemList::default_instance_ = new DBDecorateItemList();
  DBDecorateBagInfo::default_instance_ = new DBDecorateBagInfo();
  DBDecorateBagInfoList::default_instance_ = new DBDecorateBagInfoList();
  DBDecorateBagModuleInfo::default_instance_ = new DBDecorateBagModuleInfo();
  DBDecorateBagVIPItem::default_instance_ = new DBDecorateBagVIPItem();
  DBDecorateBagVIPList::default_instance_ = new DBDecorateBagVIPList();
  DBDecorateBagVIPInfo::default_instance_ = new DBDecorateBagVIPInfo();
  DBRoleInfo::default_instance_ = new DBRoleInfo();
  DBBagGrid::default_instance_->InitAsDefaultInstance();
  DBBagGridList::default_instance_->InitAsDefaultInstance();
  DBBagInfo::default_instance_->InitAsDefaultInstance();
  DBDecorateItem::default_instance_->InitAsDefaultInstance();
  DBDecorateItemList::default_instance_->InitAsDefaultInstance();
  DBDecorateBagInfo::default_instance_->InitAsDefaultInstance();
  DBDecorateBagInfoList::default_instance_->InitAsDefaultInstance();
  DBDecorateBagModuleInfo::default_instance_->InitAsDefaultInstance();
  DBDecorateBagVIPItem::default_instance_->InitAsDefaultInstance();
  DBDecorateBagVIPList::default_instance_->InitAsDefaultInstance();
  DBDecorateBagVIPInfo::default_instance_->InitAsDefaultInstance();
  DBRoleInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DBmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DBmsg_2eproto {
  StaticDescriptorInitializer_DBmsg_2eproto() {
    protobuf_AddDesc_DBmsg_2eproto();
  }
} static_descriptor_initializer_DBmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DBBagGrid::kIDFieldNumber;
const int DBBagGrid::kNumFieldNumber;
#endif  // !_MSC_VER

DBBagGrid::DBBagGrid()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBBagGrid::InitAsDefaultInstance() {
}

DBBagGrid::DBBagGrid(const DBBagGrid& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBBagGrid::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBBagGrid::~DBBagGrid() {
  SharedDtor();
}

void DBBagGrid::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBBagGrid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBBagGrid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBBagGrid_descriptor_;
}

const DBBagGrid& DBBagGrid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBBagGrid* DBBagGrid::default_instance_ = NULL;

DBBagGrid* DBBagGrid::New() const {
  return new DBBagGrid;
}

void DBBagGrid::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    num_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBBagGrid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBBagGrid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBBagGrid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBBagGrid::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBBagGrid::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBBagGrid* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBBagGrid*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBBagGrid::MergeFrom(const DBBagGrid& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBBagGrid::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBBagGrid::CopyFrom(const DBBagGrid& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBBagGrid::IsInitialized() const {

  return true;
}

void DBBagGrid::Swap(DBBagGrid* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBBagGrid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBBagGrid_descriptor_;
  metadata.reflection = DBBagGrid_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBBagGridList::kGridsFieldNumber;
#endif  // !_MSC_VER

DBBagGridList::DBBagGridList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBBagGridList::InitAsDefaultInstance() {
}

DBBagGridList::DBBagGridList(const DBBagGridList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBBagGridList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBBagGridList::~DBBagGridList() {
  SharedDtor();
}

void DBBagGridList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBBagGridList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBBagGridList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBBagGridList_descriptor_;
}

const DBBagGridList& DBBagGridList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBBagGridList* DBBagGridList::default_instance_ = NULL;

DBBagGridList* DBBagGridList::New() const {
  return new DBBagGridList;
}

void DBBagGridList::Clear() {
  grids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBBagGridList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBBagGrid Grids = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Grids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grids()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Grids;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBBagGridList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .DBBagGrid Grids = 1;
  for (int i = 0; i < this->grids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->grids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBBagGridList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .DBBagGrid Grids = 1;
  for (int i = 0; i < this->grids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->grids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBBagGridList::ByteSize() const {
  int total_size = 0;

  // repeated .DBBagGrid Grids = 1;
  total_size += 1 * this->grids_size();
  for (int i = 0; i < this->grids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBBagGridList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBBagGridList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBBagGridList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBBagGridList::MergeFrom(const DBBagGridList& from) {
  GOOGLE_CHECK_NE(&from, this);
  grids_.MergeFrom(from.grids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBBagGridList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBBagGridList::CopyFrom(const DBBagGridList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBBagGridList::IsInitialized() const {

  return true;
}

void DBBagGridList::Swap(DBBagGridList* other) {
  if (other != this) {
    grids_.Swap(&other->grids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBBagGridList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBBagGridList_descriptor_;
  metadata.reflection = DBBagGridList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBBagInfo::kGridListFieldNumber;
#endif  // !_MSC_VER

DBBagInfo::DBBagInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBBagInfo::InitAsDefaultInstance() {
  gridlist_ = const_cast< ::DBBagGridList*>(&::DBBagGridList::default_instance());
}

DBBagInfo::DBBagInfo(const DBBagInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBBagInfo::SharedCtor() {
  _cached_size_ = 0;
  gridlist_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBBagInfo::~DBBagInfo() {
  SharedDtor();
}

void DBBagInfo::SharedDtor() {
  if (this != default_instance_) {
    delete gridlist_;
  }
}

void DBBagInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBBagInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBBagInfo_descriptor_;
}

const DBBagInfo& DBBagInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBBagInfo* DBBagInfo::default_instance_ = NULL;

DBBagInfo* DBBagInfo::New() const {
  return new DBBagInfo;
}

void DBBagInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_gridlist()) {
      if (gridlist_ != NULL) gridlist_->::DBBagGridList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBBagInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DBBagGridList GridList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gridlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBBagInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .DBBagGridList GridList = 1;
  if (has_gridlist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gridlist(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBBagInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .DBBagGridList GridList = 1;
  if (has_gridlist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gridlist(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBBagInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .DBBagGridList GridList = 1;
    if (has_gridlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gridlist());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBBagInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBBagInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBBagInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBBagInfo::MergeFrom(const DBBagInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gridlist()) {
      mutable_gridlist()->::DBBagGridList::MergeFrom(from.gridlist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBBagInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBBagInfo::CopyFrom(const DBBagInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBBagInfo::IsInitialized() const {

  return true;
}

void DBBagInfo::Swap(DBBagInfo* other) {
  if (other != this) {
    std::swap(gridlist_, other->gridlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBBagInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBBagInfo_descriptor_;
  metadata.reflection = DBBagInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBDecorateItem::kIdFieldNumber;
const int DBDecorateItem::kTypeFieldNumber;
const int DBDecorateItem::kEndTimeFieldNumber;
#endif  // !_MSC_VER

DBDecorateItem::DBDecorateItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBDecorateItem::InitAsDefaultInstance() {
}

DBDecorateItem::DBDecorateItem(const DBDecorateItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBDecorateItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  type_ = 0u;
  endtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBDecorateItem::~DBDecorateItem() {
  SharedDtor();
}

void DBDecorateItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBDecorateItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDecorateItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBDecorateItem_descriptor_;
}

const DBDecorateItem& DBDecorateItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBDecorateItem* DBDecorateItem::default_instance_ = NULL;

DBDecorateItem* DBDecorateItem::New() const {
  return new DBDecorateItem;
}

void DBDecorateItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    type_ = 0u;
    endtime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBDecorateItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional uint32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_EndTime;
        break;
      }

      // optional uint64 EndTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_EndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBDecorateItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional uint64 EndTime = 3;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->endtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBDecorateItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional uint64 EndTime = 3;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->endtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBDecorateItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint64 EndTime = 3;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->endtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDecorateItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBDecorateItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBDecorateItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBDecorateItem::MergeFrom(const DBDecorateItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBDecorateItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDecorateItem::CopyFrom(const DBDecorateItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDecorateItem::IsInitialized() const {

  return true;
}

void DBDecorateItem::Swap(DBDecorateItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(endtime_, other->endtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBDecorateItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBDecorateItem_descriptor_;
  metadata.reflection = DBDecorateItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBDecorateItemList::kDecorateGridsFieldNumber;
#endif  // !_MSC_VER

DBDecorateItemList::DBDecorateItemList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBDecorateItemList::InitAsDefaultInstance() {
}

DBDecorateItemList::DBDecorateItemList(const DBDecorateItemList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBDecorateItemList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBDecorateItemList::~DBDecorateItemList() {
  SharedDtor();
}

void DBDecorateItemList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBDecorateItemList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDecorateItemList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBDecorateItemList_descriptor_;
}

const DBDecorateItemList& DBDecorateItemList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBDecorateItemList* DBDecorateItemList::default_instance_ = NULL;

DBDecorateItemList* DBDecorateItemList::New() const {
  return new DBDecorateItemList;
}

void DBDecorateItemList::Clear() {
  decorategrids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBDecorateItemList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBDecorateItem DecorateGrids = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DecorateGrids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_decorategrids()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_DecorateGrids;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBDecorateItemList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .DBDecorateItem DecorateGrids = 1;
  for (int i = 0; i < this->decorategrids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decorategrids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBDecorateItemList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .DBDecorateItem DecorateGrids = 1;
  for (int i = 0; i < this->decorategrids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decorategrids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBDecorateItemList::ByteSize() const {
  int total_size = 0;

  // repeated .DBDecorateItem DecorateGrids = 1;
  total_size += 1 * this->decorategrids_size();
  for (int i = 0; i < this->decorategrids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->decorategrids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDecorateItemList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBDecorateItemList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBDecorateItemList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBDecorateItemList::MergeFrom(const DBDecorateItemList& from) {
  GOOGLE_CHECK_NE(&from, this);
  decorategrids_.MergeFrom(from.decorategrids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBDecorateItemList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDecorateItemList::CopyFrom(const DBDecorateItemList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDecorateItemList::IsInitialized() const {

  return true;
}

void DBDecorateItemList::Swap(DBDecorateItemList* other) {
  if (other != this) {
    decorategrids_.Swap(&other->decorategrids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBDecorateItemList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBDecorateItemList_descriptor_;
  metadata.reflection = DBDecorateItemList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBDecorateBagInfo::kBagGridListFieldNumber;
#endif  // !_MSC_VER

DBDecorateBagInfo::DBDecorateBagInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBDecorateBagInfo::InitAsDefaultInstance() {
  baggridlist_ = const_cast< ::DBDecorateItemList*>(&::DBDecorateItemList::default_instance());
}

DBDecorateBagInfo::DBDecorateBagInfo(const DBDecorateBagInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBDecorateBagInfo::SharedCtor() {
  _cached_size_ = 0;
  baggridlist_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBDecorateBagInfo::~DBDecorateBagInfo() {
  SharedDtor();
}

void DBDecorateBagInfo::SharedDtor() {
  if (this != default_instance_) {
    delete baggridlist_;
  }
}

void DBDecorateBagInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDecorateBagInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBDecorateBagInfo_descriptor_;
}

const DBDecorateBagInfo& DBDecorateBagInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBDecorateBagInfo* DBDecorateBagInfo::default_instance_ = NULL;

DBDecorateBagInfo* DBDecorateBagInfo::New() const {
  return new DBDecorateBagInfo;
}

void DBDecorateBagInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_baggridlist()) {
      if (baggridlist_ != NULL) baggridlist_->::DBDecorateItemList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBDecorateBagInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DBDecorateItemList BagGridList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baggridlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBDecorateBagInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .DBDecorateItemList BagGridList = 1;
  if (has_baggridlist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->baggridlist(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBDecorateBagInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .DBDecorateItemList BagGridList = 1;
  if (has_baggridlist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->baggridlist(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBDecorateBagInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .DBDecorateItemList BagGridList = 1;
    if (has_baggridlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->baggridlist());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDecorateBagInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBDecorateBagInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBDecorateBagInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBDecorateBagInfo::MergeFrom(const DBDecorateBagInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_baggridlist()) {
      mutable_baggridlist()->::DBDecorateItemList::MergeFrom(from.baggridlist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBDecorateBagInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDecorateBagInfo::CopyFrom(const DBDecorateBagInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDecorateBagInfo::IsInitialized() const {

  return true;
}

void DBDecorateBagInfo::Swap(DBDecorateBagInfo* other) {
  if (other != this) {
    std::swap(baggridlist_, other->baggridlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBDecorateBagInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBDecorateBagInfo_descriptor_;
  metadata.reflection = DBDecorateBagInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBDecorateBagInfoList::kDecorateBagListFieldNumber;
#endif  // !_MSC_VER

DBDecorateBagInfoList::DBDecorateBagInfoList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBDecorateBagInfoList::InitAsDefaultInstance() {
}

DBDecorateBagInfoList::DBDecorateBagInfoList(const DBDecorateBagInfoList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBDecorateBagInfoList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBDecorateBagInfoList::~DBDecorateBagInfoList() {
  SharedDtor();
}

void DBDecorateBagInfoList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBDecorateBagInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDecorateBagInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBDecorateBagInfoList_descriptor_;
}

const DBDecorateBagInfoList& DBDecorateBagInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBDecorateBagInfoList* DBDecorateBagInfoList::default_instance_ = NULL;

DBDecorateBagInfoList* DBDecorateBagInfoList::New() const {
  return new DBDecorateBagInfoList;
}

void DBDecorateBagInfoList::Clear() {
  decoratebaglist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBDecorateBagInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBDecorateBagInfo DecorateBagList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DecorateBagList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_decoratebaglist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_DecorateBagList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBDecorateBagInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .DBDecorateBagInfo DecorateBagList = 1;
  for (int i = 0; i < this->decoratebaglist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decoratebaglist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBDecorateBagInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .DBDecorateBagInfo DecorateBagList = 1;
  for (int i = 0; i < this->decoratebaglist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decoratebaglist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBDecorateBagInfoList::ByteSize() const {
  int total_size = 0;

  // repeated .DBDecorateBagInfo DecorateBagList = 1;
  total_size += 1 * this->decoratebaglist_size();
  for (int i = 0; i < this->decoratebaglist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->decoratebaglist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDecorateBagInfoList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBDecorateBagInfoList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBDecorateBagInfoList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBDecorateBagInfoList::MergeFrom(const DBDecorateBagInfoList& from) {
  GOOGLE_CHECK_NE(&from, this);
  decoratebaglist_.MergeFrom(from.decoratebaglist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBDecorateBagInfoList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDecorateBagInfoList::CopyFrom(const DBDecorateBagInfoList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDecorateBagInfoList::IsInitialized() const {

  return true;
}

void DBDecorateBagInfoList::Swap(DBDecorateBagInfoList* other) {
  if (other != this) {
    decoratebaglist_.Swap(&other->decoratebaglist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBDecorateBagInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBDecorateBagInfoList_descriptor_;
  metadata.reflection = DBDecorateBagInfoList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBDecorateBagModuleInfo::kDecorateBagInfoListFieldNumber;
const int DBDecorateBagModuleInfo::kTypeListFieldNumber;
#endif  // !_MSC_VER

DBDecorateBagModuleInfo::DBDecorateBagModuleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBDecorateBagModuleInfo::InitAsDefaultInstance() {
  decoratebaginfolist_ = const_cast< ::DBDecorateBagInfoList*>(&::DBDecorateBagInfoList::default_instance());
}

DBDecorateBagModuleInfo::DBDecorateBagModuleInfo(const DBDecorateBagModuleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBDecorateBagModuleInfo::SharedCtor() {
  _cached_size_ = 0;
  decoratebaginfolist_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBDecorateBagModuleInfo::~DBDecorateBagModuleInfo() {
  SharedDtor();
}

void DBDecorateBagModuleInfo::SharedDtor() {
  if (this != default_instance_) {
    delete decoratebaginfolist_;
  }
}

void DBDecorateBagModuleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDecorateBagModuleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBDecorateBagModuleInfo_descriptor_;
}

const DBDecorateBagModuleInfo& DBDecorateBagModuleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBDecorateBagModuleInfo* DBDecorateBagModuleInfo::default_instance_ = NULL;

DBDecorateBagModuleInfo* DBDecorateBagModuleInfo::New() const {
  return new DBDecorateBagModuleInfo;
}

void DBDecorateBagModuleInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_decoratebaginfolist()) {
      if (decoratebaginfolist_ != NULL) decoratebaginfolist_->::DBDecorateBagInfoList::Clear();
    }
  }
  typelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBDecorateBagModuleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DBDecorateBagInfoList DecorateBagInfoList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decoratebaginfolist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_TypeList;
        break;
      }

      // repeated uint32 TypeList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_TypeList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_typelist())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_typelist())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_TypeList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBDecorateBagModuleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .DBDecorateBagInfoList DecorateBagInfoList = 1;
  if (has_decoratebaginfolist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decoratebaginfolist(), output);
  }

  // repeated uint32 TypeList = 2;
  for (int i = 0; i < this->typelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->typelist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBDecorateBagModuleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .DBDecorateBagInfoList DecorateBagInfoList = 1;
  if (has_decoratebaginfolist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decoratebaginfolist(), target);
  }

  // repeated uint32 TypeList = 2;
  for (int i = 0; i < this->typelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->typelist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBDecorateBagModuleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .DBDecorateBagInfoList DecorateBagInfoList = 1;
    if (has_decoratebaginfolist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decoratebaginfolist());
    }

  }
  // repeated uint32 TypeList = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->typelist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->typelist(i));
    }
    total_size += 1 * this->typelist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDecorateBagModuleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBDecorateBagModuleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBDecorateBagModuleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBDecorateBagModuleInfo::MergeFrom(const DBDecorateBagModuleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  typelist_.MergeFrom(from.typelist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decoratebaginfolist()) {
      mutable_decoratebaginfolist()->::DBDecorateBagInfoList::MergeFrom(from.decoratebaginfolist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBDecorateBagModuleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDecorateBagModuleInfo::CopyFrom(const DBDecorateBagModuleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDecorateBagModuleInfo::IsInitialized() const {

  return true;
}

void DBDecorateBagModuleInfo::Swap(DBDecorateBagModuleInfo* other) {
  if (other != this) {
    std::swap(decoratebaginfolist_, other->decoratebaginfolist_);
    typelist_.Swap(&other->typelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBDecorateBagModuleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBDecorateBagModuleInfo_descriptor_;
  metadata.reflection = DBDecorateBagModuleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBDecorateBagVIPItem::kGradeFieldNumber;
const int DBDecorateBagVIPItem::kExperFieldNumber;
#endif  // !_MSC_VER

DBDecorateBagVIPItem::DBDecorateBagVIPItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBDecorateBagVIPItem::InitAsDefaultInstance() {
}

DBDecorateBagVIPItem::DBDecorateBagVIPItem(const DBDecorateBagVIPItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBDecorateBagVIPItem::SharedCtor() {
  _cached_size_ = 0;
  grade_ = 0u;
  exper_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBDecorateBagVIPItem::~DBDecorateBagVIPItem() {
  SharedDtor();
}

void DBDecorateBagVIPItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBDecorateBagVIPItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDecorateBagVIPItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBDecorateBagVIPItem_descriptor_;
}

const DBDecorateBagVIPItem& DBDecorateBagVIPItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBDecorateBagVIPItem* DBDecorateBagVIPItem::default_instance_ = NULL;

DBDecorateBagVIPItem* DBDecorateBagVIPItem::New() const {
  return new DBDecorateBagVIPItem;
}

void DBDecorateBagVIPItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_ = 0u;
    exper_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBDecorateBagVIPItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 grade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exper;
        break;
      }

      // optional uint32 exper = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exper_)));
          set_has_exper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBDecorateBagVIPItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 grade = 1;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grade(), output);
  }

  // optional uint32 exper = 2;
  if (has_exper()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exper(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBDecorateBagVIPItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 grade = 1;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grade(), target);
  }

  // optional uint32 exper = 2;
  if (has_exper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exper(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBDecorateBagVIPItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 grade = 1;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }

    // optional uint32 exper = 2;
    if (has_exper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exper());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDecorateBagVIPItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBDecorateBagVIPItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBDecorateBagVIPItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBDecorateBagVIPItem::MergeFrom(const DBDecorateBagVIPItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_exper()) {
      set_exper(from.exper());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBDecorateBagVIPItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDecorateBagVIPItem::CopyFrom(const DBDecorateBagVIPItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDecorateBagVIPItem::IsInitialized() const {

  return true;
}

void DBDecorateBagVIPItem::Swap(DBDecorateBagVIPItem* other) {
  if (other != this) {
    std::swap(grade_, other->grade_);
    std::swap(exper_, other->exper_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBDecorateBagVIPItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBDecorateBagVIPItem_descriptor_;
  metadata.reflection = DBDecorateBagVIPItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBDecorateBagVIPList::kVIPItemListFieldNumber;
#endif  // !_MSC_VER

DBDecorateBagVIPList::DBDecorateBagVIPList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBDecorateBagVIPList::InitAsDefaultInstance() {
}

DBDecorateBagVIPList::DBDecorateBagVIPList(const DBDecorateBagVIPList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBDecorateBagVIPList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBDecorateBagVIPList::~DBDecorateBagVIPList() {
  SharedDtor();
}

void DBDecorateBagVIPList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBDecorateBagVIPList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDecorateBagVIPList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBDecorateBagVIPList_descriptor_;
}

const DBDecorateBagVIPList& DBDecorateBagVIPList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBDecorateBagVIPList* DBDecorateBagVIPList::default_instance_ = NULL;

DBDecorateBagVIPList* DBDecorateBagVIPList::New() const {
  return new DBDecorateBagVIPList;
}

void DBDecorateBagVIPList::Clear() {
  vipitemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBDecorateBagVIPList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBDecorateBagVIPItem VIPItemList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_VIPItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vipitemlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_VIPItemList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBDecorateBagVIPList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .DBDecorateBagVIPItem VIPItemList = 1;
  for (int i = 0; i < this->vipitemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->vipitemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBDecorateBagVIPList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .DBDecorateBagVIPItem VIPItemList = 1;
  for (int i = 0; i < this->vipitemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->vipitemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBDecorateBagVIPList::ByteSize() const {
  int total_size = 0;

  // repeated .DBDecorateBagVIPItem VIPItemList = 1;
  total_size += 1 * this->vipitemlist_size();
  for (int i = 0; i < this->vipitemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vipitemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDecorateBagVIPList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBDecorateBagVIPList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBDecorateBagVIPList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBDecorateBagVIPList::MergeFrom(const DBDecorateBagVIPList& from) {
  GOOGLE_CHECK_NE(&from, this);
  vipitemlist_.MergeFrom(from.vipitemlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBDecorateBagVIPList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDecorateBagVIPList::CopyFrom(const DBDecorateBagVIPList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDecorateBagVIPList::IsInitialized() const {

  return true;
}

void DBDecorateBagVIPList::Swap(DBDecorateBagVIPList* other) {
  if (other != this) {
    vipitemlist_.Swap(&other->vipitemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBDecorateBagVIPList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBDecorateBagVIPList_descriptor_;
  metadata.reflection = DBDecorateBagVIPList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBDecorateBagVIPInfo::kVIPListInfoFieldNumber;
#endif  // !_MSC_VER

DBDecorateBagVIPInfo::DBDecorateBagVIPInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBDecorateBagVIPInfo::InitAsDefaultInstance() {
  viplistinfo_ = const_cast< ::DBDecorateBagVIPList*>(&::DBDecorateBagVIPList::default_instance());
}

DBDecorateBagVIPInfo::DBDecorateBagVIPInfo(const DBDecorateBagVIPInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBDecorateBagVIPInfo::SharedCtor() {
  _cached_size_ = 0;
  viplistinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBDecorateBagVIPInfo::~DBDecorateBagVIPInfo() {
  SharedDtor();
}

void DBDecorateBagVIPInfo::SharedDtor() {
  if (this != default_instance_) {
    delete viplistinfo_;
  }
}

void DBDecorateBagVIPInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBDecorateBagVIPInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBDecorateBagVIPInfo_descriptor_;
}

const DBDecorateBagVIPInfo& DBDecorateBagVIPInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBDecorateBagVIPInfo* DBDecorateBagVIPInfo::default_instance_ = NULL;

DBDecorateBagVIPInfo* DBDecorateBagVIPInfo::New() const {
  return new DBDecorateBagVIPInfo;
}

void DBDecorateBagVIPInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_viplistinfo()) {
      if (viplistinfo_ != NULL) viplistinfo_->::DBDecorateBagVIPList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBDecorateBagVIPInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DBDecorateBagVIPList VIPListInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_viplistinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBDecorateBagVIPInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .DBDecorateBagVIPList VIPListInfo = 1;
  if (has_viplistinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->viplistinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBDecorateBagVIPInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .DBDecorateBagVIPList VIPListInfo = 1;
  if (has_viplistinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->viplistinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBDecorateBagVIPInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .DBDecorateBagVIPList VIPListInfo = 1;
    if (has_viplistinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->viplistinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBDecorateBagVIPInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBDecorateBagVIPInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBDecorateBagVIPInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBDecorateBagVIPInfo::MergeFrom(const DBDecorateBagVIPInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viplistinfo()) {
      mutable_viplistinfo()->::DBDecorateBagVIPList::MergeFrom(from.viplistinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBDecorateBagVIPInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBDecorateBagVIPInfo::CopyFrom(const DBDecorateBagVIPInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBDecorateBagVIPInfo::IsInitialized() const {

  return true;
}

void DBDecorateBagVIPInfo::Swap(DBDecorateBagVIPInfo* other) {
  if (other != this) {
    std::swap(viplistinfo_, other->viplistinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBDecorateBagVIPInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBDecorateBagVIPInfo_descriptor_;
  metadata.reflection = DBDecorateBagVIPInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DBRoleInfo::kUIDFieldNumber;
const int DBRoleInfo::kNameFieldNumber;
const int DBRoleInfo::kLevelFieldNumber;
const int DBRoleInfo::kRankFieldNumber;
const int DBRoleInfo::kLevelExperFieldNumber;
const int DBRoleInfo::kRankExperFieldNumber;
const int DBRoleInfo::kBagInfoFieldNumber;
const int DBRoleInfo::kDecorateBagModuleInfoFieldNumber;
const int DBRoleInfo::kVIPInfoFieldNumber;
#endif  // !_MSC_VER

DBRoleInfo::DBRoleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DBRoleInfo::InitAsDefaultInstance() {
  baginfo_ = const_cast< ::DBBagInfo*>(&::DBBagInfo::default_instance());
  decoratebagmoduleinfo_ = const_cast< ::DBDecorateBagModuleInfo*>(&::DBDecorateBagModuleInfo::default_instance());
  vipinfo_ = const_cast< ::DBDecorateBagVIPInfo*>(&::DBDecorateBagVIPInfo::default_instance());
}

DBRoleInfo::DBRoleInfo(const DBRoleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DBRoleInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0u;
  rank_ = 0u;
  levelexper_ = 0u;
  rankexper_ = 0u;
  baginfo_ = NULL;
  decoratebagmoduleinfo_ = NULL;
  vipinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBRoleInfo::~DBRoleInfo() {
  SharedDtor();
}

void DBRoleInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete baginfo_;
    delete decoratebagmoduleinfo_;
    delete vipinfo_;
  }
}

void DBRoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBRoleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBRoleInfo_descriptor_;
}

const DBRoleInfo& DBRoleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DBmsg_2eproto();
  return *default_instance_;
}

DBRoleInfo* DBRoleInfo::default_instance_ = NULL;

DBRoleInfo* DBRoleInfo::New() const {
  return new DBRoleInfo;
}

void DBRoleInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    level_ = 0u;
    rank_ = 0u;
    levelexper_ = 0u;
    rankexper_ = 0u;
    if (has_baginfo()) {
      if (baginfo_ != NULL) baginfo_->::DBBagInfo::Clear();
    }
    if (has_decoratebagmoduleinfo()) {
      if (decoratebagmoduleinfo_ != NULL) decoratebagmoduleinfo_->::DBDecorateBagModuleInfo::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_vipinfo()) {
      if (vipinfo_ != NULL) vipinfo_->::DBDecorateBagVIPInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DBRoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 UID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_Rank;
        break;
      }

      // optional uint32 Rank = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_LevelExper;
        break;
      }

      // optional uint32 LevelExper = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_LevelExper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &levelexper_)));
          set_has_levelexper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_RankExper;
        break;
      }

      // optional uint32 RankExper = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_RankExper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankexper_)));
          set_has_rankexper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_BagInfo;
        break;
      }

      // optional .DBBagInfo BagInfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BagInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baginfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_DecorateBagModuleInfo;
        break;
      }

      // optional .DBDecorateBagModuleInfo DecorateBagModuleInfo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DecorateBagModuleInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decoratebagmoduleinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_VIPInfo;
        break;
      }

      // optional .DBDecorateBagVIPInfo VIPInfo = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_VIPInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vipinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DBRoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 UID = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional uint32 Level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // optional uint32 Rank = 4;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rank(), output);
  }

  // optional uint32 LevelExper = 5;
  if (has_levelexper()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->levelexper(), output);
  }

  // optional uint32 RankExper = 6;
  if (has_rankexper()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rankexper(), output);
  }

  // optional .DBBagInfo BagInfo = 7;
  if (has_baginfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->baginfo(), output);
  }

  // optional .DBDecorateBagModuleInfo DecorateBagModuleInfo = 8;
  if (has_decoratebagmoduleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->decoratebagmoduleinfo(), output);
  }

  // optional .DBDecorateBagVIPInfo VIPInfo = 9;
  if (has_vipinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->vipinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DBRoleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 UID = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 Level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // optional uint32 Rank = 4;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rank(), target);
  }

  // optional uint32 LevelExper = 5;
  if (has_levelexper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->levelexper(), target);
  }

  // optional uint32 RankExper = 6;
  if (has_rankexper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->rankexper(), target);
  }

  // optional .DBBagInfo BagInfo = 7;
  if (has_baginfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->baginfo(), target);
  }

  // optional .DBDecorateBagModuleInfo DecorateBagModuleInfo = 8;
  if (has_decoratebagmoduleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->decoratebagmoduleinfo(), target);
  }

  // optional .DBDecorateBagVIPInfo VIPInfo = 9;
  if (has_vipinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->vipinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DBRoleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 UID = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 Level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 Rank = 4;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rank());
    }

    // optional uint32 LevelExper = 5;
    if (has_levelexper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->levelexper());
    }

    // optional uint32 RankExper = 6;
    if (has_rankexper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rankexper());
    }

    // optional .DBBagInfo BagInfo = 7;
    if (has_baginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->baginfo());
    }

    // optional .DBDecorateBagModuleInfo DecorateBagModuleInfo = 8;
    if (has_decoratebagmoduleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decoratebagmoduleinfo());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .DBDecorateBagVIPInfo VIPInfo = 9;
    if (has_vipinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vipinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBRoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DBRoleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DBRoleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DBRoleInfo::MergeFrom(const DBRoleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_levelexper()) {
      set_levelexper(from.levelexper());
    }
    if (from.has_rankexper()) {
      set_rankexper(from.rankexper());
    }
    if (from.has_baginfo()) {
      mutable_baginfo()->::DBBagInfo::MergeFrom(from.baginfo());
    }
    if (from.has_decoratebagmoduleinfo()) {
      mutable_decoratebagmoduleinfo()->::DBDecorateBagModuleInfo::MergeFrom(from.decoratebagmoduleinfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vipinfo()) {
      mutable_vipinfo()->::DBDecorateBagVIPInfo::MergeFrom(from.vipinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DBRoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleInfo::CopyFrom(const DBRoleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleInfo::IsInitialized() const {

  return true;
}

void DBRoleInfo::Swap(DBRoleInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(name_, other->name_);
    std::swap(level_, other->level_);
    std::swap(rank_, other->rank_);
    std::swap(levelexper_, other->levelexper_);
    std::swap(rankexper_, other->rankexper_);
    std::swap(baginfo_, other->baginfo_);
    std::swap(decoratebagmoduleinfo_, other->decoratebagmoduleinfo_);
    std::swap(vipinfo_, other->vipinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DBRoleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBRoleInfo_descriptor_;
  metadata.reflection = DBRoleInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
